// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/LyM.gold"
import gold.structures.automaton.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class LyM {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=5;
      Object Q=$fix(GCollections.asSet("For","Do","Range","InstructionBlock","EstadoInicial","Error","ConditionBlock","FinalState","While","sip","Initialization","ContinuacionState"));
      $line=6;
      Object E=$fix(GCollections.asSet('F','D','R','I','W','C','Z','{','}','(',')'));
      $line=7;
      Object q0=$fix("EstadoInicial");
      $line=8;
      Object F=$fix(GCollections.asSet("sip"));
      $line=9;
      GDeterministicAutomaton A=$cast(GDeterministicAutomaton.class,$fix($invokeConstructor(GDeterministicAutomaton.class,new Object[]{Q,E,q0,F,new GMethod(LyM.class,"\u03B4")})));
      $line=10;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,A));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LyM.class,"main",$line);
    }
  }
  public static Object \u03B4(Object s, Object c) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=25;
      if (($opEqualY(s,"EstadoInicial")&&$opEqualY(c,'F'))) {
        $line=26;
        $result="For";
        if (true) break $try;
      }
      else {
        $line=27;
        if (($opEqualY(s,"For")&&$opEqualY(c,'('))) {
          $line=28;
          $result="Range";
          if (true) break $try;
        }
        else {
          $line=29;
          if (($opEqualY(s,"Range")&&$opEqualY(c,'R'))) {
            $line=30;
            $result="Do";
            if (true) break $try;
          }
          else {
            $line=31;
            if (($opEqualY(s,"Do")&&$opEqualY(c,')'))) {
              $line=32;
              $result="InstructionBlock";
              if (true) break $try;
            }
            else {
              $line=33;
              if (($opEqualY(s,"InstructionBlock")&&$opEqualY(c,'{'))) {
                $line=34;
                $result="FinalState";
                if (true) break $try;
              }
              else {
                $line=35;
                if (($opEqualY(s,"FinalState")&&$opEqualY(c,'I'))) {
                  $line=36;
                  $result="ContinuacionState";
                  if (true) break $try;
                }
                else {
                  $line=37;
                  if (($opEqualY(s,"ContinuacionState")&&$opEqualY(c,'}'))) {
                    $line=38;
                    $result="sip";
                    if (true) break $try;
                  }
                  else {
                    $line=39;
                    if (($opEqualY(s,"EstadoInicial")&&$opEqualY(c,'Z'))) {
                      $line=40;
                      $result="Initialization";
                      if (true) break $try;
                    }
                    else {
                      $line=42;
                      if (($opEqualY(s,"Initialization")&&$opEqualY(c,'W'))) {
                        $line=43;
                        $result="While";
                        if (true) break $try;
                      }
                      else {
                        $line=45;
                        if (($opEqualY(s,"While")&&$opEqualY(c,'{'))) {
                          $line=46;
                          $result="ConditionBlock";
                          if (true) break $try;
                        }
                        else {
                          $line=48;
                          if (($opEqualY(s,"ConditionBlock")&&$opEqualY(c,'C'))) {
                            $line=49;
                            $result="Do";
                            if (true) break $try;
                          }
                          else {
                            $line=51;
                            if (($opEqualY(s,"Do")&&$opEqualY(c,'}'))) {
                              $line=52;
                              $result="InstructionBlock";
                              if (true) break $try;
                            }
                            else {
                              $line=54;
                              if (($opEqualY(s,"InstructionBlock")&&$opEqualY(c,'{'))) {
                                $line=55;
                                $result="FinalState";
                                if (true) break $try;
                              }
                              else {
                                $line=57;
                                if (($opEqualY(s,"FinalState")&&$opEqualY(c,'I'))) {
                                  $line=58;
                                  $result="ContinuacionState";
                                  if (true) break $try;
                                }
                                else {
                                  $line=59;
                                  if (($opEqualY(s,"ContinuacionState")&&$opEqualY(c,'}'))) {
                                    $line=60;
                                    $result="sip";
                                    if (true) break $try;
                                  }
                                  else {
                                    $line=62;
                                    $result="Error";
                                    if (true) break $try;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=63;
      $rethrow(new RuntimeException("The function \"\u03B4(s:Object,c:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LyM.class,"\u03B4",$line);
    }
    return $result;
  }
}
