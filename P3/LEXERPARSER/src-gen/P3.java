// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/P3.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class P3 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static String currentString=null;
  static {
    int $line=0;
    $line=9;
    $try:try {
      currentString=$defaultValue(String.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static GArrayList images=null;
  static {
    int $line=0;
    $line=10;
    $try:try {
      images=$invokeConstructor(GArrayList.class,new Object[]{});
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet allSymbols=null;
  static {
    int $line=0;
    $line=12;
    $try:try {
      allSymbols=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet keyWords=null;
  static {
    int $line=0;
    $line=13;
    $try:try {
      keyWords=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet skipChars=null;
  static {
    int $line=0;
    $line=14;
    $try:try {
      skipChars=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet preKW=null;
  static {
    int $line=0;
    $line=17;
    $try:try {
      preKW=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet preOps=null;
  static {
    int $line=0;
    $line=18;
    $try:try {
      preOps=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet StartOps=null;
  static {
    int $line=0;
    $line=20;
    $try:try {
      StartOps=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet Symbols1=null;
  static {
    int $line=0;
    $line=21;
    $try:try {
      Symbols1=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet CharsSymbols1=null;
  static {
    int $line=0;
    $line=23;
    $try:try {
      CharsSymbols1=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet alphaUpper=null;
  static {
    int $line=0;
    $line=25;
    $try:try {
      alphaUpper=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet alphaLower=null;
  static {
    int $line=0;
    $line=26;
    $try:try {
      alphaLower=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet digits=null;
  static {
    int $line=0;
    $line=27;
    $try:try {
      digits=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet alphaNum=null;
  static {
    int $line=0;
    $line=29;
    $try:try {
      alphaNum=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet Out=null;
  static {
    int $line=0;
    $line=31;
    $try:try {
      Out=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static Boolean diffIdents=null;
  static {
    int $line=0;
    $line=32;
    $try:try {
      diffIdents=$defaultValue(Boolean.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static ISet Ids=null;
  static {
    int $line=0;
    $line=34;
    $try:try {
      Ids=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static GHashTableMap translation=null;
  static {
    int $line=0;
    $line=35;
    $try:try {
      translation=$invokeConstructor(GHashTableMap.class,new Object[]{});
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,null,$line);
    }
  }
  public static Object chars(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      int $v3=$int(0);
      int $v4=$int($invokeMethod("length",string,new Object[]{}))-1;
      $v2:for (int i=$v3; i<=$v4; i++) {
        $v1.add($invokeMethod("charAt",string,new Object[]{i}));
      }
      $result=$v1;
      if (true) break $try;
      $line=37;
      $rethrow(new RuntimeException("The function \"chars(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"chars",$line);
    }
    return $result;
  }
  public static Object charsStrings(Object strings) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v5=$newSet(GCollections.emptySet());
      $v6:for (Object s:GCollections.unmodifiableCollection(strings)) {
        $v5.union(GCollections.unmodifiableSet(((java.lang.Iterable)(P3.chars(s)))));
      }
      $result=$v5;
      if (true) break $try;
      $line=40;
      $rethrow(new RuntimeException("The function \"charsStrings(strings:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"charsStrings",$line);
    }
    return $result;
  }
  public static Object elements(Object array) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v7=$newSet();
      int $v9=$int(0);
      int $v10=$int($opAbsolY(array))-1;
      $v8:for (int i=$v9; i<=$v10; i++) {
        $v7.add($getArrayValue(array,new Object[]{i}));
      }
      $result=$v7;
      if (true) break $try;
      $line=43;
      $rethrow(new RuntimeException("The function \"elements(array:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"elements",$line);
    }
    return $result;
  }
  public static Object prefixes(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v11=$newSet();
      int $v13=$int(1);
      int $v14=$int($invokeMethod("length",string,new Object[]{}));
      $v12:for (int i=$v13; i<=$v14; i++) {
        $v11.add($invokeMethod("substring",string,new Object[]{0,i}));
      }
      $result=$v11;
      if (true) break $try;
      $line=45;
      $rethrow(new RuntimeException("The function \"prefixes(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"prefixes",$line);
    }
    return $result;
  }
  public static Object splits(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v15=$newSet();
      int $v17=$int(1);
      int $v18=$int($opSubtrY($invokeMethod("length",string,new Object[]{}),1));
      $v16:for (int i=$v17; i<=$v18; i++) {
        $v15.add(GCollections.asList($invokeMethod("substring",string,new Object[]{0,i}),$invokeMethod("substring",string,new Object[]{i,$invokeMethod("length",string,new Object[]{})})));
      }
      $result=$v15;
      if (true) break $try;
      $line=46;
      $rethrow(new RuntimeException("The function \"splits(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"splits",$line);
    }
    return $result;
  }
  public static Object allPrefixes(Object strings) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v19=$newSet(GCollections.emptySet());
      $v20:for (Object s:GCollections.unmodifiableCollection(strings)) {
        $v19.union(GCollections.unmodifiableSet(((java.lang.Iterable)(P3.prefixes(s)))));
      }
      $result=$v19;
      if (true) break $try;
      $line=48;
      $rethrow(new RuntimeException("The function \"allPrefixes(strings:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"allPrefixes",$line);
    }
    return $result;
  }
  public static Object translationGet(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result=(($bool((($opEqualY($opAbsolY(q),1)&&$opMembrY(q,Symbols1))&&!$opEqualY(q,'\n'))))?(q):(((gold.structures.map.GHashTableMap)translation).get(q)));
      if (true) break $try;
      $line=50;
      $rethrow(new RuntimeException("The function \"translationGet(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"translationGet",$line);
    }
    return $result;
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=53;
      currentString=$cast(String.class,$fix(""));
      $line=54;
      Object lexer=$fix(P3.createTransducer());
      $line=55;
      Object parser=$fix(P3.createAutomaton());
      $line=59;
      P3.testLexerParser($cast(gold.structures.automaton.ITransducer.class,lexer),$cast(gold.structures.automaton.IPushdownAutomaton.class,parser));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"main",$line);
    }
  }
  public static Object testLexer(ITransducer M) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=64;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=65;
      String string=null;
      string=$defaultValue(String.class);
      $line=69;
      Object inputA=$fix(P3.elements(((gold.structures.automaton.ITransducer)M).getInputAlphabet()));
      $line=72;
      Object input=$fix("");
      $line=75;
      System.out.println($message(new Object[]{"----------------------------"}));
      $line=76;
      System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
      $line=77;
      System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
      $line=78;
      string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
      $line=83;
      while (true) {
        if (!(!$opEqualY(string,"EXIT"))) break;
        $line=85;
        string=$cast(String.class,$fix($opAdditY(string," \n ")));
        $line=86;
        input=$fix("");
        $line=87;
        while (true) {
          if (!(!$opEqualY(((java.lang.String)string).charAt($int(0)),'$'))) break;
          $line=88;
          input=$fix($opAdditY(input,string));
          $line=89;
          string=$cast(String.class,$fix($opAdditY(((java.util.Scanner)sc).nextLine()," \n  ")));
        }
        $line=92;
        if ($opSbsetY(P3.chars(input),inputA)) {
          $line=93;
          currentString=$cast(String.class,$fix(""));
          $line=94;
          images=$cast(GArrayList.class,$fix($invokeConstructor(GArrayList.class,new Object[]{})));
          $line=95;
          Object result=$fix(((gold.structures.automaton.ITransducer)M).acceptsString($cast(java.lang.String.class,input)));
          $line=96;
          Object tokenStream=$fix(((gold.structures.automaton.ITransducer)M).getOutputString());
          $line=99;
          System.out.println($message(new Object[]{$opAdditY($opAdditY("The input was ",(($bool(result))?(""):("not ")))," accepted by the lexer.")}));
          $line=100;
          if ($bool(result)) {
            $line=101;
            System.out.println($message(new Object[]{$opAdditY("Token Stream:  ",tokenStream)}));
            $line=102;
            System.out.println($message(new Object[]{$opAdditY("Strings: ",images)}));
          }
          else {
            $line=104;
            System.out.println($message(new Object[]{$opAdditY("Partial token Stream ",tokenStream)}));
          }
        }
        else {
          $line=106;
          System.out.println($message(new Object[]{$opAdditY("Input contains invalid characters: ",$opDiffeY(P3.chars(input),inputA))}));
        }
        $line=108;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=110;
        System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
        $line=111;
        System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
        $line=112;
        string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
      }
      $line=115;
      System.out.println($message(new Object[]{"Good bye"}));
      $line=116;
      System.out.println($message(new Object[]{""}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"testLexer",$line);
    }
    return $result;
  }
  public static Object problems(String q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=128;
      if ($opMembrY(q,allSymbols)) {
        $line=128;
        $result=false;
        if (true) break $try;
      }
      else {
        $line=129;
        if ($opLessqY($opAbsolY(q),1)) {
          $line=129;
          $result=true;
          if (true) break $try;
        }
        else {
          $line=131;
          for (Object $v21:GCollections.unmodifiableCollection(P3.splits(q))) {
            java.util.Iterator $v22=GCollections.unmodifiableCollection($v21).iterator();
            Object s=$v22.next();
            Object t=$v22.next();
            $line=132;
            if ((!$bool(P3.problems($cast(java.lang.String.class,s)))&&!$bool(P3.problems($cast(java.lang.String.class,t))))) {
              $line=132;
              $result=false;
              if (true) break $try;
            }
          }
          $line=134;
          $result=true;
          if (true) break $try;
        }
      }
      $line=137;
      $rethrow(new RuntimeException("The function \"problems(q:String)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"problems",$line);
    }
    return $result;
  }
  public static Object translationPreOps(Object state) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=143;
      Object x=null;
      Object y=null;
      $line=144;
      String q=null;
      q=$defaultValue(String.class);
      $line=145;
      q=$cast(String.class,$fix(state));
      $line=146;
      Object n=$fix(((java.lang.String)q).length());
      $line=147;
      if ($opEqualY(n,0)) {
        $line=147;
        $result="";
        if (true) break $try;
      }
      else {
        $line=148;
        if ($opMembrY(q,allSymbols)) {
          $line=149;
          ((gold.structures.list.GArrayList)images).add(q);
          $line=150;
          $result=P3.translationGet(q);
          if (true) break $try;
        }
        else {
          $line=151;
          if ($opEqualY(n,1)) {
            $line=151;
            $result="";
            if (true) break $try;
          }
          else {
            $line=153;
            for (Object $v23:GCollections.unmodifiableCollection(P3.splits(q))) {
              java.util.Iterator $v24=GCollections.unmodifiableCollection($v23).iterator();
              Object s=$v24.next();
              Object t=$v24.next();
              $line=154;
              x=$fix(P3.translationPreOps(s));
              $line=155;
              y=$fix(P3.translationPreOps(t));
              $line=156;
              if ((!$opEqualY(x,"")&&!$opEqualY(y,""))) {
                $line=157;
                $result=$opAdditY(x,y);
                if (true) break $try;
              }
            }
            $line=160;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=164;
      $rethrow(new RuntimeException("The function \"translationPreOps(state:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"translationPreOps",$line);
    }
    return $result;
  }
  public static Object initialize() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=175;
      skipChars=$cast(ISet.class,$fix(GCollections.asSet(' ','\t')));
      $line=176;
      alphaUpper=$cast(ISet.class,$fix($opIntvlY('A','Z')));
      $line=178;
      alphaLower=$cast(ISet.class,$fix($opIntvlY('a','z')));
      $line=179;
      digits=$cast(ISet.class,$fix($opIntvlY('0','9')));
      $line=180;
      alphaNum=$cast(ISet.class,$fix($opUnionY($opUnionY($opUnionY(alphaUpper,alphaLower),digits),GCollections.asSet('?'))));
      $line=181;
      keyWords=$cast(ISet.class,$fix(GCollections.asSet("MOVE","ROTATE","RIGHT","LEFT","LOOK","FREE","DROP","PICK","POP","CHECK","NOP","BLOCKEDP","IF","DEFINE","REPEAT","TO","BLOCK","OUTPUT","END","N","S","W","E","C","B")));
      $line=184;
      allSymbols=$cast(ISet.class,$fix(GCollections.asSet("(",")","\n","]","[","!")));
      $line=197;
      ((gold.structures.map.GHashTableMap)translation).put("\n",'\u22C8');
      $line=199;
      ((gold.structures.map.GHashTableMap)translation).put("N",'N');
      $line=200;
      ((gold.structures.map.GHashTableMap)translation).put("S",'S');
      $line=201;
      ((gold.structures.map.GHashTableMap)translation).put("W",'W');
      $line=202;
      ((gold.structures.map.GHashTableMap)translation).put("E",'E');
      $line=203;
      ((gold.structures.map.GHashTableMap)translation).put("C",'C');
      $line=204;
      ((gold.structures.map.GHashTableMap)translation).put("B",'B');
      $line=206;
      ((gold.structures.map.GHashTableMap)translation).put("NOP",'K');
      $line=207;
      ((gold.structures.map.GHashTableMap)translation).put("Num",'#');
      $line=209;
      ((gold.structures.map.GHashTableMap)translation).put("MOVE",'M');
      $line=210;
      ((gold.structures.map.GHashTableMap)translation).put("RIGHT",'r');
      $line=211;
      ((gold.structures.map.GHashTableMap)translation).put("LEFT",'l');
      $line=212;
      ((gold.structures.map.GHashTableMap)translation).put("ROTATE",'R');
      $line=214;
      ((gold.structures.map.GHashTableMap)translation).put("LOOK",'L');
      $line=215;
      ((gold.structures.map.GHashTableMap)translation).put("DROP",'D');
      $line=217;
      ((gold.structures.map.GHashTableMap)translation).put("FREE",'F');
      $line=218;
      ((gold.structures.map.GHashTableMap)translation).put("PICK",'P');
      $line=219;
      ((gold.structures.map.GHashTableMap)translation).put("POP",'p');
      $line=220;
      ((gold.structures.map.GHashTableMap)translation).put("CHECK",'c');
      $line=221;
      ((gold.structures.map.GHashTableMap)translation).put("BLOCKEDP",'w');
      $line=222;
      ((gold.structures.map.GHashTableMap)translation).put("BLOCK",'b');
      $line=226;
      ((gold.structures.map.GHashTableMap)translation).put("REPEAT",'X');
      $line=230;
      ((gold.structures.map.GHashTableMap)translation).put("IF",'?');
      $line=231;
      ((gold.structures.map.GHashTableMap)translation).put("DEFINE",'d');
      $line=232;
      ((gold.structures.map.GHashTableMap)translation).put("TO",'T');
      $line=233;
      ((gold.structures.map.GHashTableMap)translation).put("OUTPUT",'O');
      $line=234;
      ((gold.structures.map.GHashTableMap)translation).put("END",'$');
      $line=238;
      ((gold.structures.map.GHashTableMap)translation).put("IdL",'v');
      $line=239;
      ((gold.structures.map.GHashTableMap)translation).put("IdU",'V');
      $line=242;
      ((gold.structures.map.GHashTableMap)translation).put("Param",'x');
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"initialize",$line);
    }
    return $result;
  }
  public static ITransducer createTransducer() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=255;
      P3.initialize();
      $line=257;
      preOps=$cast(ISet.class,$fix(P3.allPrefixes(allSymbols)));
      $line=258;
      preKW=$cast(ISet.class,$fix(P3.allPrefixes(keyWords)));
      $line=260;
      gold.structures.set.ISet $v25=$newSet(GCollections.emptySet());
      $v26:for (Object x:GCollections.unmodifiableCollection(allSymbols)) {
        $v25.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet($invokeMethod("charAt",x,new Object[]{0}))))));
      }
      StartOps=$cast(ISet.class,$fix($v25));
      $line=261;
      gold.structures.set.ISet $v27=$newSet(GCollections.emptySet());
      $v28:for (Object x:GCollections.unmodifiableCollection(StartOps)) {
        $v27.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet($opAdditY("",x))))));
      }
      Symbols1=$cast(ISet.class,$fix($opDiffeY($opInterY($v27,allSymbols),GCollections.asSet("\n"))));
      $line=262;
      gold.structures.set.ISet $v29=$newSet(GCollections.emptySet());
      $v30:for (Object x:GCollections.unmodifiableCollection(Symbols1)) {
        $v29.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet($invokeMethod("charAt",x,new Object[]{0}))))));
      }
      CharsSymbols1=$cast(ISet.class,$fix($v29));
      $line=265;
      gold.structures.set.ISet $v31=$newSet(GCollections.emptySet());
      $v32:for (Object x:GCollections.unmodifiableCollection(((gold.structures.map.GHashTableMap)translation).values())) {
        $v31.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet(x)))));
      }
      Out=$cast(ISet.class,$fix($opUnionY(CharsSymbols1,$v31)));
      $line=267;
      System.out.println($message(new Object[]{Out}));
      $line=268;
      Ids=$cast(ISet.class,$fix(GCollections.asSet("IdU","IdL","Param")));
      $line=270;
      Object Q=$fix($opUnionY($opUnionY(GCollections.asSet("INIT","IdU","Num","Err","IdL","Param"),preKW),preOps));
      $line=272;
      System.out.println($message(new Object[]{Q}));
      $line=274;
      Object \u03A3=$fix($opUnionY($opUnionY($opUnionY(alphaNum,P3.charsStrings(allSymbols)),skipChars),GCollections.asSet(':')));
      $line=278;
      Object q_0=$fix("INIT");
      $line=279;
      Object F=$fix(GCollections.asSet("INIT"));
      $line=280;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,Out,q_0,F,new GMethod(P3.class,"\u03B4"),new GMethod(P3.class,"g"),new GMethod(P3.class,"h")});
      if (true) break $try;
      $line=281;
      $rethrow(new RuntimeException("The function \"createTransducer()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object state, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=286;
      String q=null;
      q=$defaultValue(String.class);
      $line=287;
      q=$cast(String.class,$fix(state));
      $line=289;
      if ($opEqualY(q,"Err")) {
        $line=289;
        $result="Err";
        if (true) break $try;
      }
      else {
        $line=290;
        if ($opMembrY(q,preOps)) {
          $line=291;
          if ($opMembrY($opAdditY(q,\u03C3),preOps)) {
            $line=291;
            $result=$opAdditY(q,\u03C3);
            if (true) break $try;
          }
          else {
            $line=292;
            if ($bool(P3.problems($cast(java.lang.String.class,q)))) {
              $line=292;
              $result="Err";
              if (true) break $try;
            }
            else {
              $line=293;
              if ($opMembrY(\u03C3,skipChars)) {
                $line=293;
                $result="INIT";
                if (true) break $try;
              }
              else {
                $line=294;
                if ($opMembrY(\u03C3,$opIntvlY('0','9'))) {
                  $line=294;
                  $result="Num";
                  if (true) break $try;
                }
                else {
                  $line=295;
                  if ($opMembrY($opAdditY("",\u03C3),preKW)) {
                    $line=295;
                    $result=$opAdditY("",\u03C3);
                    if (true) break $try;
                  }
                  else {
                    $line=296;
                    if ($opMembrY(\u03C3,alphaUpper)) {
                      $line=296;
                      $result="IdU";
                      if (true) break $try;
                    }
                    else {
                      $line=297;
                      if ($opMembrY(\u03C3,alphaLower)) {
                        $line=297;
                        $result="IdL";
                        if (true) break $try;
                      }
                      else {
                        $line=298;
                        if ($opMembrY($opAdditY("",\u03C3),preOps)) {
                          $line=298;
                          $result=$opAdditY("",\u03C3);
                          if (true) break $try;
                        }
                        else {
                          $line=299;
                          $result="Err";
                          if (true) break $try;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        else {
          $line=301;
          if ($opMembrY(\u03C3,skipChars)) {
            $line=301;
            $result="INIT";
            if (true) break $try;
          }
          else {
            $line=302;
            if (($opEqualY(q,"INIT")&&$opMembrY(\u03C3,$opIntvlY('0','9')))) {
              $line=302;
              $result="Num";
              if (true) break $try;
            }
            else {
              $line=303;
              if (($opEqualY(q,"INIT")&&$opMembrY($opAdditY("",\u03C3),preKW))) {
                $line=303;
                $result=$opAdditY("",\u03C3);
                if (true) break $try;
              }
              else {
                $line=304;
                if (($opEqualY(q,"INIT")&&$opMembrY(\u03C3,alphaUpper))) {
                  $line=304;
                  $result="IdU";
                  if (true) break $try;
                }
                else {
                  $line=305;
                  if (($opEqualY(q,"INIT")&&$opMembrY(\u03C3,alphaLower))) {
                    $line=305;
                    $result="IdL";
                    if (true) break $try;
                  }
                  else {
                    $line=306;
                    if (($opEqualY(q,"INIT")&&$opEqualY(\u03C3,':'))) {
                      $line=306;
                      $result="Param";
                      if (true) break $try;
                    }
                    else {
                      $line=307;
                      if (($opEqualY(q,"INIT")&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                        $line=307;
                        $result=$opAdditY("",\u03C3);
                        if (true) break $try;
                      }
                      else {
                        $line=308;
                        if (($opMembrY(q,preKW)&&$opMembrY($opAdditY(q,\u03C3),preKW))) {
                          $line=308;
                          $result=$opAdditY(q,\u03C3);
                          if (true) break $try;
                        }
                        else {
                          $line=309;
                          if ((($opMembrY(q,preKW)&&$opMembrY(\u03C3,alphaNum))&&$opMembrY(((java.lang.String)q).charAt($int(0)),alphaUpper))) {
                            $line=309;
                            $result="IdU";
                            if (true) break $try;
                          }
                          else {
                            $line=310;
                            if ((($opMembrY(q,preKW)&&$opMembrY(\u03C3,alphaNum))&&$opMembrY(((java.lang.String)q).charAt($int(0)),alphaLower))) {
                              $line=310;
                              $result="IdL";
                              if (true) break $try;
                            }
                            else {
                              $line=311;
                              if (($opMembrY(q,preKW)&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                                $line=311;
                                $result=$opAdditY("",\u03C3);
                                if (true) break $try;
                              }
                              else {
                                $line=312;
                                if (($opEqualY(q,"Num")&&$opMembrY(\u03C3,$opIntvlY('0','9')))) {
                                  $line=312;
                                  $result="Num";
                                  if (true) break $try;
                                }
                                else {
                                  $line=313;
                                  if (($opEqualY(q,"Num")&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                                    $line=313;
                                    $result=$opAdditY("",\u03C3);
                                    if (true) break $try;
                                  }
                                  else {
                                    $line=314;
                                    if (($opEqualY(q,"Num")&&$opMembrY(\u03C3,alphaNum))) {
                                      $line=314;
                                      $result="Err";
                                      if (true) break $try;
                                    }
                                    else {
                                      $line=315;
                                      if (($opMembrY(q,Ids)&&$opMembrY(\u03C3,alphaNum))) {
                                        $line=315;
                                        $result=q;
                                        if (true) break $try;
                                      }
                                      else {
                                        $line=316;
                                        if (($opMembrY(q,Ids)&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                                          $line=316;
                                          $result=$opAdditY("",\u03C3);
                                          if (true) break $try;
                                        }
                                        else {
                                          $line=317;
                                          $result="Err";
                                          if (true) break $try;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=319;
      $rethrow(new RuntimeException("The function \"\u03B4(state:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=325;
      $result="";
      if (true) break $try;
      $line=326;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"g",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=329;
      String s=null;
      s=$defaultValue(String.class);
      $line=332;
      s=$cast(String.class,$fix((($bool($opEqualY(\u03C3,'\n')))?("\\n"):($opAdditY("",\u03C3)))));
      $line=335;
      if ($opMembrY(q,preOps)) {
        $line=336;
        if (($opMembrY(\u03C3,skipChars)&&$opMembrY(q,allSymbols))) {
          $line=337;
          ((gold.structures.list.GArrayList)images).add(currentString);
          $line=338;
          currentString=$cast(String.class,$fix(""));
          $line=339;
          $result=P3.translationGet(q);
          if (true) break $try;
        }
        else {
          $line=340;
          if ($opMembrY($opAdditY(q,\u03C3),preOps)) {
            $line=341;
            currentString=$cast(String.class,$fix($opAdditY(currentString,s)));
            $line=342;
            $result="";
            if (true) break $try;
          }
          else {
            $line=343;
            if (($opMembrY(\u03C3,$opUnionY(StartOps,alphaNum))&&$opMembrY(q,allSymbols))) {
              $line=344;
              ((gold.structures.list.GArrayList)images).add(currentString);
              $line=345;
              currentString=$cast(String.class,$fix($opAdditY("",s)));
              $line=346;
              $result=P3.translationGet(q);
              if (true) break $try;
            }
            else {
              $line=347;
              if ($opMembrY(\u03C3,$opUnionY($opUnionY(StartOps,alphaNum),skipChars))) {
                $line=348;
                currentString=$cast(String.class,$fix($opAdditY("",s)));
                $line=349;
                $result=P3.translationPreOps(q);
                if (true) break $try;
              }
              else {
                $line=351;
                currentString=$cast(String.class,$fix($opAdditY(currentString,s)));
                $line=352;
                $result="";
                if (true) break $try;
              }
            }
          }
        }
      }
      else {
        $line=356;
        if ((!$opMembrY(q,GCollections.asSet("Err"))&&$opMembrY(\u03C3,$opUnionY(skipChars,StartOps)))) {
          $line=357;
          if ($opEqualY(q,"INIT")) {
            $line=358;
            currentString=$cast(String.class,$fix((($bool($opMembrY(\u03C3,StartOps)))?(s):(""))));
            $line=359;
            $result="";
            if (true) break $try;
          }
          else {
            $line=360;
            if ($opEqualY(P3.translationGet(q),null)) {
              $line=364;
              ((gold.structures.list.GArrayList)images).add(currentString);
              $line=365;
              currentString=$cast(String.class,$fix((($bool($opMembrY(\u03C3,$opUnionY(skipChars,StartOps))))?(s):(""))));
              $line=367;
              Object f=$fix($invokeMethod("charAt",q,new Object[]{0}));
              $line=368;
              if ($opMembrY(f,alphaUpper)) {
                $line=368;
                $result=P3.translationGet("IdU");
                if (true) break $try;
              }
              else {
                $line=370;
                $result=P3.translationGet("IdL");
                if (true) break $try;
              }
            }
            else {
              $line=374;
              ((gold.structures.list.GArrayList)images).add(currentString);
              $line=375;
              currentString=$cast(String.class,$fix((($bool($opMembrY(\u03C3,$opUnionY(skipChars,StartOps))))?(s):(""))));
              $line=376;
              $result=P3.translationGet(q);
              if (true) break $try;
            }
          }
        }
        else {
          $line=382;
          currentString=$cast(String.class,$fix($opAdditY(currentString,s)));
          $line=383;
          $result="";
          if (true) break $try;
        }
      }
      $line=386;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"h",$line);
    }
    return $result;
  }
  public static IPushdownAutomaton createAutomaton() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=414;
      Object Q=$fix(GCollections.asSet(0,1,2,3,4,5,6,7,8,9,10,11,12,13));
      $line=415;
      Object \u03A3=$fix(Out);
      $line=416;
      Object \u0393=$fix(GCollections.asSet('1','2','3'));
      $line=417;
      Object q_0=$fix(0);
      $line=418;
      Object F=$fix(GCollections.asSet(0));
      $line=419;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=421;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,0,$cast(java.lang.String.class,'\u22C8')),new Object[]{});
      $line=423;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'R')),new Object[]{});
      $line=424;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'M')),new Object[]{});
      $line=425;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'r')),new Object[]{});
      $line=426;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'l')),new Object[]{});
      $line=427;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'D')),new Object[]{});
      $line=428;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'F')),new Object[]{});
      $line=429;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'P')),new Object[]{});
      $line=430;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,'p')),new Object[]{});
      $line=432;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(1,2,$cast(java.lang.String.class,'#')),new Object[]{});
      $line=433;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(1,2,$cast(java.lang.String.class,'V')),new Object[]{});
      $line=434;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(1,2,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=435;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(1,2,$cast(java.lang.String.class,'x')),new Object[]{});
      $line=436;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(2,0,$cast(java.lang.String.class,'\u22C8')),new Object[]{});
      $line=438;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,3,$cast(java.lang.String.class,'L')),new Object[]{});
      $line=439;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(3,2,$cast(java.lang.String.class,'N')),new Object[]{});
      $line=440;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(3,2,$cast(java.lang.String.class,'S')),new Object[]{});
      $line=441;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(3,2,$cast(java.lang.String.class,'W')),new Object[]{});
      $line=442;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(3,2,$cast(java.lang.String.class,'E')),new Object[]{});
      $line=444;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,4,$cast(java.lang.String.class,'c')),new Object[]{});
      $line=445;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(4,1,$cast(java.lang.String.class,'C')),new Object[]{});
      $line=446;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(4,1,$cast(java.lang.String.class,'B')),new Object[]{});
      $line=448;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,0,$cast(java.lang.String.class,'K')),new Object[]{});
      $line=450;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,5,$cast(java.lang.String.class,'(')),new Object[]{"1"});
      $line=451;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(5,0,$cast(java.lang.String.class,'b')),new Object[]{});
      $line=452;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,2,$cast(java.lang.String.class,')')),new Object[]{"1"});
      $line=454;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,6,$cast(java.lang.String.class,'d')),new Object[]{});
      $line=455;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(6,7,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=456;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(7,2,$cast(java.lang.String.class,'#')),new Object[]{});
      $line=458;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,8,$cast(java.lang.String.class,'X')),new Object[]{});
      $line=459;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(8,9,$cast(java.lang.String.class,'#')),new Object[]{});
      $line=460;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(8,9,$cast(java.lang.String.class,'V')),new Object[]{});
      $line=461;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(8,9,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=462;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(8,9,$cast(java.lang.String.class,'x')),new Object[]{});
      $line=463;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(9,0,$cast(java.lang.String.class,'[')),new Object[]{"2"});
      $line=464;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,2,$cast(java.lang.String.class,']')),new Object[]{"2"});
      $line=466;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,10,$cast(java.lang.String.class,'?')),new Object[]{});
      $line=467;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(10,10,$cast(java.lang.String.class,'!')),new Object[]{});
      $line=468;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(10,9,$cast(java.lang.String.class,'w')),new Object[]{});
      $line=470;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,11,$cast(java.lang.String.class,'T')),new Object[]{});
      $line=471;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(11,12,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=472;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(11,12,$cast(java.lang.String.class,'V')),new Object[]{});
      $line=473;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(12,12,$cast(java.lang.String.class,'\u22C8')),new Object[]{});
      $line=474;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(12,12,$cast(java.lang.String.class,'x')),new Object[]{});
      $line=475;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(12,0,$cast(java.lang.String.class,'O')),new Object[]{"3"});
      $line=476;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,2,$cast(java.lang.String.class,'$')),new Object[]{"3"});
      $line=478;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,13,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=479;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,13,$cast(java.lang.String.class,'V')),new Object[]{});
      $line=480;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,13,$cast(java.lang.String.class,'#')),new Object[]{});
      $line=481;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,13,$cast(java.lang.String.class,'V')),new Object[]{});
      $line=482;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,13,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=483;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,13,$cast(java.lang.String.class,'x')),new Object[]{});
      $line=484;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,2,$cast(java.lang.String.class,'#')),new Object[]{});
      $line=485;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,2,$cast(java.lang.String.class,'V')),new Object[]{});
      $line=486;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,2,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=487;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(13,2,$cast(java.lang.String.class,'x')),new Object[]{});
      $line=489;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,0,$cast(java.lang.String.class,'v')),new Object[]{});
      $line=490;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,0,$cast(java.lang.String.class,'V')),new Object[]{});
      $line=495;
      $result=M;
      if (true) break $try;
      $line=496;
      $rethrow(new RuntimeException("The function \"createAutomaton()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"createAutomaton",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
  public static Object testLexerParser(ITransducer M, IPushdownAutomaton P) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=501;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=502;
      String string=null;
      string=$defaultValue(String.class);
      $line=506;
      Object inputA=$fix(P3.elements(((gold.structures.automaton.ITransducer)M).getInputAlphabet()));
      $line=509;
      Object input=$fix("");
      $line=512;
      System.out.println($message(new Object[]{"----------------------------"}));
      $line=513;
      System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
      $line=514;
      System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
      $line=515;
      string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
      $line=520;
      while (true) {
        if (!(!$opEqualY(string,"EXIT"))) break;
        $line=522;
        string=$cast(String.class,$fix($opAdditY(string,"  \n ")));
        $line=523;
        input=$fix("");
        $line=524;
        while (true) {
          if (!(!$opEqualY(((java.lang.String)string).charAt($int(0)),'$'))) break;
          $line=525;
          input=$fix($opAdditY(input,string));
          $line=526;
          string=$cast(String.class,$fix($opAdditY(((java.util.Scanner)sc).nextLine()," \n ")));
        }
        $line=529;
        if ($opSbsetY(P3.chars(input),inputA)) {
          $line=530;
          currentString=$cast(String.class,$fix(""));
          $line=531;
          images=$cast(GArrayList.class,$fix($invokeConstructor(GArrayList.class,new Object[]{})));
          $line=532;
          Object result=$fix(((gold.structures.automaton.ITransducer)M).acceptsString($cast(java.lang.String.class,input)));
          $line=533;
          Object tokenStream=$fix(((gold.structures.automaton.ITransducer)M).getOutputString());
          $line=535;
          System.out.println($message(new Object[]{$opAdditY($opAdditY("The input was ",(($bool(result))?(""):("not ")))," accepted by the lexer.")}));
          $line=536;
          if ($bool(result)) {
            $line=537;
            System.out.println($message(new Object[]{$opAdditY("Token Stream:  ",tokenStream)}));
            $line=538;
            System.out.println($message(new Object[]{$opAdditY("Strings: ",images)}));
            $line=539;
            result=$fix(((gold.structures.automaton.IPushdownAutomaton)P).acceptsString($cast(java.lang.String.class,tokenStream)));
            $line=540;
            System.out.println($message(new Object[]{$opAdditY("Parser result: ",(($bool(result))?("accepted "):("rejected ")))}));
          }
          else {
            $line=542;
            System.out.println($message(new Object[]{$opAdditY("Partial token Stream ",tokenStream)}));
          }
        }
        else {
          $line=544;
          System.out.println($message(new Object[]{$opAdditY("Input contains invalid characters: ",$opDiffeY(P3.chars(input),inputA))}));
        }
        $line=546;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=548;
        System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
        $line=549;
        System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
        $line=550;
        string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
      }
      $line=553;
      System.out.println($message(new Object[]{"Good bye"}));
      $line=554;
      System.out.println($message(new Object[]{""}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P3.class,"testLexerParser",$line);
    }
    return $result;
  }
}
