// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/FinalGold.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class FinalGold {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=6;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=7;
      Object coder=$fix($invokeMethod(FinalGold.class,"createCoder",true,null,new Object[]{}));
      $line=8;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,coder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,FinalGold.class,"main",$line);
    }
  }
  public static ITransducer createCoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=15;
      Object pos_i=$fix($opIntvlY(0,2));
      $line=16;
      Object suma_digs=$fix($opIntvlY(0,3));
      $line=18;
      Object A=$fix($opCartsY(new Object[]{pos_i,suma_digs}));
      $line=19;
      Object B=$fix($opCartsY(new Object[]{pos_i,suma_digs,GCollections.asSet('x')}));
      $line=20;
      Object Q=$fix($opUnionY($opUnionY(A,B),GCollections.asSet('E','F')));
      $line=22;
      Object In=$fix($opUnionY($opIntvlY('0','9'),GCollections.asSet('x','$')));
      $line=23;
      Object Out=$fix($opUnionY($opIntvlY('0','3'),GCollections.asSet('x','$')));
      $line=25;
      Object q_0=$fix(GCollections.asList(1,0));
      $line=26;
      Object F=$fix(GCollections.asSet('F'));
      $line=28;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,In,Out,q_0,F,new GMethod(FinalGold.class,"\u03B4"),new GMethod(FinalGold.class,"g"),new GMethod(FinalGold.class,"h")});
      if (true) break $try;
      $line=29;
      $rethrow(new RuntimeException("The function \"createCoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,FinalGold.class,"createCoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object state, Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=33;
      if ($opEqualY($opAbsolY(state),3)) {
        $line=34;
        if ($opEqualY(x,'$')) {
          $line=34;
          $result='E';
          if (true) break $try;
        }
        else {
          $line=35;
          $result=GCollections.asList($opModulY($opAdditY($getArrayValue(state,new Object[]{0}),1),3),$opModulY(x,$opAdditY($opModulY($opAdditY($getArrayValue(state,new Object[]{0}),1),3),2)));
          if (true) break $try;
        }
      }
      else {
        $line=38;
        if ($opEqualY($opAbsolY(state),2)) {
          $line=40;
          if ($opMembrY(x,$opIntvlY('1','9'))) {
            $line=40;
            $result=GCollections.asList($getArrayValue(state,new Object[]{0}),$opModulY($opAdditY($getArrayValue(state,new Object[]{1}),x),$opAdditY($getArrayValue(state,new Object[]{0}),2)));
            if (true) break $try;
          }
          else {
            $line=41;
            if ($opEqualY(x,'x')) {
              $line=41;
              $result=GCollections.asList($getArrayValue(state,new Object[]{0}),$getArrayValue(state,new Object[]{1}),'x');
              if (true) break $try;
            }
            else {
              $line=42;
              if ($opEqualY(x,'$')) {
                $line=42;
                $result='F';
                if (true) break $try;
              }
              else {
                $line=43;
                $result='E';
                if (true) break $try;
              }
            }
          }
        }
        else {
          $line=46;
          $result='E';
          if (true) break $try;
        }
      }
      $line=49;
      $rethrow(new RuntimeException("The function \"\u03B4(state:Object,x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,FinalGold.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object g(Object state) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=52;
      if ($opEqualY(state,'F')) {
        $line=52;
        $result='$';
        if (true) break $try;
      }
      else {
        $line=53;
        $result="";
        if (true) break $try;
      }
      $line=55;
      $rethrow(new RuntimeException("The function \"g(state:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,FinalGold.class,"g",$line);
    }
    return $result;
  }
  public static Object h(Object state, Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=58;
      if ($opEqualY($opAbsolY(state),3)) {
        $line=58;
        $result='x';
        if (true) break $try;
      }
      else {
        $line=59;
        if ($opEqualY(state,'F')) {
          $line=59;
          $result="";
          if (true) break $try;
        }
        else {
          $line=60;
          if ($opEqualY(state,'E')) {
            $line=60;
            $result="";
            if (true) break $try;
          }
          else {
            $line=61;
            if ($opEqualY(x,'$')) {
              $line=61;
              $result=$getArrayValue(state,new Object[]{1});
              if (true) break $try;
            }
            else {
              $line=62;
              if ($opEqualY(x,'x')) {
                $line=62;
                $result=$getArrayValue(state,new Object[]{1});
                if (true) break $try;
              }
              else {
                $line=64;
                $result="";
                if (true) break $try;
              }
            }
          }
        }
      }
      $line=66;
      $rethrow(new RuntimeException("The function \"h(state:Object,x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,FinalGold.class,"h",$line);
    }
    return $result;
  }
}
